{"version":3,"sources":["upload.js","app.js"],"names":["createElement","tag","classnames","content","node","document","length","classList","add","textContent","bytesToSize","bytes","sizes","i","parseInt","Math","floor","log","round","pow","uploadInit","selector","options","files","fileInput","querySelector","openBtn","previewContainer","upload","style","display","multy","setAttribute","insertAdjacentElement","handleOpenClick","click","handleChange","event","target","innerHTML","Array","from","forEach","file","reader","FileReader","onload","src","result","insertAdjacentHTML","name","readAsDataURL","handleRemove","dataset","filter","block","closest","setTimeout","remove","addEventListener"],"mappings":"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","file":"app.c328ef1a.js","sourceRoot":"..","sourcesContent":["const createElement = (tag, classnames = [], content) => {\r\n    const node = document.createElement(tag);\r\n\r\n    if (classnames.length) {\r\n        node.classList.add(...classnames);\r\n    }\r\n\r\n    if (content) {\r\n        node.textContent = content;\r\n    }\r\n\r\n    return node;\r\n}\r\n\r\nfunction bytesToSize(bytes) {\r\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB']\r\n    if (!bytes) {\r\n      return '0 Byte'\r\n    }\r\n    const i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)))\r\n    return Math.round(bytes / Math.pow(1024, i)) + ' ' + sizes[i]\r\n  }\r\n\r\nexport function uploadInit(selector, options = {}) {\r\n    let files = [];\r\n\r\n    const fileInput = document.querySelector(selector);\r\n    const openBtn = createElement('button', ['btn'], 'Открыть');\r\n    const previewContainer = createElement('div', ['preview']);\r\n    const upload = createElement('button', ['btn', 'primary'], 'Загрузить');\r\n\r\n    fileInput.style.display = 'none';\r\n    upload.style.display = 'none';\r\n\r\n    if (options.multy) {\r\n        fileInput.setAttribute('multiple', true);\r\n    }\r\n\r\n    fileInput.insertAdjacentElement('afterend', previewContainer);\r\n    fileInput.insertAdjacentElement('afterend', upload)\r\n    fileInput.insertAdjacentElement('afterend', openBtn)\r\n\r\n    const handleOpenClick = () => fileInput.click();\r\n\r\n    const handleChange = (event) => {\r\n      if (!event.target.files.length) {\r\n        return;\r\n      }\r\n\r\n      previewContainer.innerHTML = '';\r\n\r\n      files = Array.from(event.target.files);\r\n\r\n      upload.style.display = 'inline'\r\n    \r\n      files.forEach((file) => {\r\n        const reader = new FileReader();\r\n\r\n        reader.onload = (event) => {\r\n            const src = event.target.result;\r\n            \r\n            previewContainer.insertAdjacentHTML('afterbegin', `\r\n                <div class=\"preview-image\">\r\n                   <div class=\"preview-remove\" data-name=\"${file.name}\">&times;</div>\r\n                   <img src=\"${src}\" alt=\"${file.name}\"/>\r\n                   <div class=\"preview-info\">\r\n                        <span>${file.name}</span>\r\n                        <span>${bytesToSize(file.sizes)}</span>\r\n                   </div>\r\n                </div>\r\n            `);\r\n        };\r\n\r\n        reader.readAsDataURL(file);\r\n      });\r\n    };\r\n\r\n    const handleRemove = (event) => {\r\n        if (!event.target.dataset.name) {\r\n            return;\r\n        }\r\n\r\n        const { name } = event.target.dataset;\r\n\r\n        files = files.filter((file) =>  file.name !== name);\r\n\r\n        if (!files.length) {\r\n            upload.style.display = 'none'\r\n          }\r\n\r\n        const block = previewContainer\r\n            .querySelector(`[data-name=\"${name}\"]`)\r\n            .closest('.preview-image');\r\n\r\n        block.classList.add('removing');\r\n        setTimeout(() => block.remove(), 300);\r\n    }\r\n\r\n    openBtn.addEventListener('click', handleOpenClick);\r\n    fileInput.addEventListener('change', handleChange);\r\n    previewContainer.addEventListener('click', handleRemove);\r\n\r\n}","import { uploadInit } from './upload.js';\r\n\r\nuploadInit('#inputUpload', {\r\n  multy: true,\r\n});"]}